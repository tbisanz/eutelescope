<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->

<!--
============================================================================================================================
   Steering File generated by Marlin GUI on Tue May  8 11:25:25 2018

   WARNING: - Please be aware that comments made in the original steering file were lost.
            - Processors that are not installed in your Marlin binary lost their parameter's descriptions and types as well.
            - Extra parameters that aren't categorized as default in a processor lost their description and type.
============================================================================================================================
-->


<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">

   <execute>
      <processor name="AIDA"/>
      <processor name="LoadRefHitDB"/>
      <processor name="LoadCoordinatorPreAlignment"/>
      <processor name="LoadAlignment1"/>
      <processor name="ApplyAlignment1"/>
      <processor name="LoadAlignment2"/>
      <processor name="ApplyAlignment2"/>
      <processor name="LoadAlignment3"/>
      <processor name="ApplyAlignment3"/>
      <processor name="LoadAlignment4"/>
      <processor name="ApplyAlignment4"/>
      <processor name="LoadAlignment5"/>
      <processor name="ApplyAlignment5"/>
      <processor name="LoadAlignment6"/>
      <processor name="ApplyAlignment6"/>
      <processor name="LoadAlignment7"/>
      <processor name="ApplyAlignment7"/>
      <processor name="LoadAlignment8"/>
      <processor name="ApplyAlignment8"/>
      <processor name="LoadAlignment9"/>
      <processor name="ApplyAlignment9"/>
      <processor name="LoadAlignment10"/>
      <processor name="ApplyAlignment10"/>
      <processor name="LoadAlignment11"/>
      <processor name="ApplyAlignment11"/>
      <processor name="LoadAlignment12"/>
      <processor name="ApplyAlignment12"/>
      <processor name="LoadAlignment13"/>
      <processor name="ApplyAlignment13"/>
      <processor name="LoadAlignment14"/>
      <processor name="ApplyAlignment14"/>
      <processor name="DUTPos"/>
      <processor name="Save"/>
   </execute>

   <global>
      <parameter name="LCIOInputFiles"> @LcioPath@/run@RunNumber@-alibava-dummy.slcio </parameter>
      <parameter name="GearXMLFile" value="@GearFilePath@/@GearFile@"/>
      <parameter name="MaxRecordNumber" value="10"/>
      <parameter name="SkipNEvents" value="@SkipNEvents@"/>
      <parameter name="SupressCheck" value="false"/>
      <parameter name="Verbosity" value="@Verbosity@"/>
   </global>

 <processor name="AIDA" type="AIDAProcessor">
 <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
  <!-- compression of output file 0: false >0: true (default) -->
  <parameter name="Compress" type="int" value="1"/>
  <!-- filename without extension-->
  <parameter name="FileName" type="string" value="@HistogramPath@/@Output@-alibava-finalpos"/>
  <!-- type of output file root (default) or xml )-->
  <parameter name="FileType" type="string" value="root"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="LoadRefHitDB" type="ConditionsProcessor">
 <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
  <!--Initialization of a data file handler-->
  <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> referenceHit @DatabasePath@/@FilePrefix@-referencehit.slcio referenceHit </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="LoadCoordinatorPreAlignment" type="ConditionsProcessor">
 <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
  <!--Initialization of a data file handler-->
  <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> coordinatorprealignment @DatabasePath@/@FilePrefix@-prealignment.slcio alignment </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="LoadAlignment1" type="ConditionsProcessor">
 <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
  <!--Initialization of a data file handler-->
  <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> alignment1 @DatabasePath@/@FilePrefix@-alignment-1-gbl.slcio alignment </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="ApplyAlignment1" type="EUTelProcessorApplyAlignment">
 <!--Apply alignment constants to hit collection-->
  <!--Alignment constant from the condition file-->
  <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> alignment1 </parameter>
  <!--The name of the input hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> hit </parameter>
  <!--The name of the output hit collection-->
  <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> AlignedHit1 </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="LoadAlignment2" type="ConditionsProcessor">
 <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
  <!--Initialization of a data file handler-->
  <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> alignment2 @DatabasePath@/@FilePrefix@-alignment-2-gbl.slcio alignment </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="ApplyAlignment2" type="EUTelProcessorApplyAlignment">
 <!--Apply alignment constants to hit collection-->
  <!--Alignment constant from the condition file-->
  <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> alignment2 </parameter>
  <!--The name of the input hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> AlignedHit1 </parameter>
  <!--The name of the output hit collection-->
  <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> AlignedHit2 </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="LoadAlignment3" type="ConditionsProcessor">
 <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
  <!--Initialization of a data file handler-->
  <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> alignment3 @DatabasePath@/@FilePrefix@-alignment-3-gbl.slcio alignment </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="ApplyAlignment3" type="EUTelProcessorApplyAlignment">
 <!--Apply alignment constants to hit collection-->
  <!--Alignment constant from the condition file-->
  <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> alignment3 </parameter>
  <!--The name of the input hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> AlignedHit2 </parameter>
  <!--The name of the output hit collection-->
  <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> AlignedHit3 </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="LoadAlignment4" type="ConditionsProcessor">
 <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
  <!--Initialization of a data file handler-->
  <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> alignment4 @DatabasePath@/@FilePrefix@-alignment-4-gbl.slcio alignment </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="ApplyAlignment4" type="EUTelProcessorApplyAlignment">
 <!--Apply alignment constants to hit collection-->
  <!--Alignment constant from the condition file-->
  <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> alignment4 </parameter>
  <!--The name of the input hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> AlignedHit3 </parameter>
  <!--The name of the output hit collection-->
  <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> AlignedHit4 </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="LoadAlignment5" type="ConditionsProcessor">
 <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
  <!--Initialization of a data file handler-->
  <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> alignment5 @DatabasePath@/@FilePrefix@-alignment-5-gbl.slcio alignment </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="ApplyAlignment5" type="EUTelProcessorApplyAlignment">
 <!--Apply alignment constants to hit collection-->
  <!--Alignment constant from the condition file-->
  <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> alignment5 </parameter>
  <!--The name of the input hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> AlignedHit4 </parameter>
  <!--The name of the output hit collection-->
  <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> AlignedHit5 </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="LoadAlignment6" type="ConditionsProcessor">
 <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
  <!--Initialization of a data file handler-->
  <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> alignment6 @DatabasePath@/@FilePrefix@-alignment-6-gbl.slcio alignment </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="ApplyAlignment6" type="EUTelProcessorApplyAlignment">
 <!--Apply alignment constants to hit collection-->
  <!--Alignment constant from the condition file-->
  <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> alignment6 </parameter>
  <!--The name of the input hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> AlignedHit5 </parameter>
  <!--The name of the output hit collection-->
  <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> AlignedHit6 </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="LoadAlignment7" type="ConditionsProcessor">
 <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
  <!--Initialization of a data file handler-->
  <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> alignment7 @DatabasePath@/@FilePrefix@-alignment-7-gbl.slcio alignment </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="ApplyAlignment7" type="EUTelProcessorApplyAlignment">
 <!--Apply alignment constants to hit collection-->
  <!--Alignment constant from the condition file-->
  <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> alignment7 </parameter>
  <!--The name of the input hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> AlignedHit6 </parameter>
  <!--The name of the output hit collection-->
  <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> AlignedHit7 </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="LoadAlignment8" type="ConditionsProcessor">
 <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
  <!--Initialization of a data file handler-->
  <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> alignment8 @DatabasePath@/@FilePrefix@-alignment-8-gbl.slcio alignment </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="ApplyAlignment8" type="EUTelProcessorApplyAlignment">
 <!--Apply alignment constants to hit collection-->
  <!--Alignment constant from the condition file-->
  <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> alignment8 </parameter>
  <!--The name of the input hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> AlignedHit7 </parameter>
  <!--The name of the output hit collection-->
  <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> AlignedHit8 </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="LoadAlignment9" type="ConditionsProcessor">
 <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
  <!--Initialization of a data file handler-->
  <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> alignment9 @DatabasePath@/@FilePrefix@-alignment-9-gbl.slcio alignment </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="ApplyAlignment9" type="EUTelProcessorApplyAlignment">
 <!--Apply alignment constants to hit collection-->
  <!--Alignment constant from the condition file-->
  <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> alignment9 </parameter>
  <!--The name of the input hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> AlignedHit8 </parameter>
  <!--The name of the output hit collection-->
  <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> AlignedHit9 </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="LoadAlignment10" type="ConditionsProcessor">
 <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
  <!--Initialization of a data file handler-->
  <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> alignment10 @DatabasePath@/@FilePrefix@-alignment-10-gbl.slcio alignment </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="ApplyAlignment10" type="EUTelProcessorApplyAlignment">
 <!--Apply alignment constants to hit collection-->
  <!--Alignment constant from the condition file-->
  <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> alignment10 </parameter>
  <!--The name of the input hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> AlignedHit9 </parameter>
  <!--The name of the output hit collection-->
  <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> AlignedHit10 </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="LoadAlignment11" type="ConditionsProcessor">
 <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
  <!--Initialization of a data file handler-->
  <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> alignment11 @DatabasePath@/@FilePrefix@-alignment-11-gbl.slcio alignment </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="ApplyAlignment11" type="EUTelProcessorApplyAlignment">
 <!--Apply alignment constants to hit collection-->
  <!--Alignment constant from the condition file-->
  <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> alignment11 </parameter>
  <!--The name of the input hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> AlignedHit10 </parameter>
  <!--The name of the output hit collection-->
  <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> AlignedHit11 </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="LoadAlignment12" type="ConditionsProcessor">
 <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
  <!--Initialization of a data file handler-->
  <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> alignment12 @DatabasePath@/@FilePrefix@-alignment-12-gbl.slcio alignment </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="ApplyAlignment12" type="EUTelProcessorApplyAlignment">
 <!--Apply alignment constants to hit collection-->
  <!--Alignment constant from the condition file-->
  <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> alignment12 </parameter>
  <!--The name of the input hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> AlignedHit11 </parameter>
  <!--The name of the output hit collection-->
  <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> AlignedHit12 </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="LoadAlignment13" type="ConditionsProcessor">
 <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
  <!--Initialization of a data file handler-->
  <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> alignment13 @DatabasePath@/@FilePrefix@-alignment-13-gbl.slcio alignment </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="ApplyAlignment13" type="EUTelProcessorApplyAlignment">
 <!--Apply alignment constants to hit collection-->
  <!--Alignment constant from the condition file-->
  <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> alignment13 </parameter>
  <!--The name of the input hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> AlignedHit12 </parameter>
  <!--The name of the output hit collection-->
  <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> AlignedHit13 </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="LoadAlignment14" type="ConditionsProcessor">
 <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
  <!--Initialization of a data file handler-->
  <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> alignment14 @DatabasePath@/@FilePrefix@-alignment-14-gbl.slcio alignment </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="ApplyAlignment14" type="EUTelProcessorApplyAlignment">
 <!--Apply alignment constants to hit collection-->
  <!--Alignment constant from the condition file-->
  <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> alignment14 </parameter>
  <!--The name of the input hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> AlignedHit13 </parameter>
  <!--The name of the output hit collection-->
  <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> AlignedHit14 </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="DUTPos" type="EUTelDUTPosition">
 <!--EUTelDUTPosition gets the final position of sensors and a DUT in the global coordinate system. This can then be used for futher analysis, or just for information -->
  <!--The DUT position will be written to this file!-->
  <parameter name="DUTPositionFile" type="string" value="@HistogramPath@/@RunNumber@-finalposition.txt"/>
  <!--The collection name after the final alignment-->
  <parameter name="FinalCollection" type="string" value="AlignedHit14"/>
  <!--The sensor ID of the DUT.-->
  <parameter name="ManualDUTID" type="int" value="6"/>
  <!--The sorted sensor position of the DUT (usually 3).-->
  <parameter name="ManualDUTPosition" type="int" value="3"/>
  <!--The sensors' position will be written to this file!-->
  <parameter name="OutputFile" type="string" value="@DatabasePath@/@FilePrefix@-alignment-total@TrackSuffix@.slcio"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <parameter name="Verbosity" type="string" value="DEBUG9"/>
</processor>

 <processor name="Save" type="EUTelOutputProcessor">
 <!--Writes the current event to the specified LCIO outputfile. Eventually it adds a EORE at the of the file if it was missing Needs to be the last ActiveProcessor.-->
  <!--drops the named collections from the event-->
  <parameter name="DropCollectionNames" type="StringVec"> hit PreAlignedHit AlignedHit1 AlignedHit2 AlignedHit3 AlignedHit4 AlignedHit5 AlignedHit6 AlignedHit7 AlignedHit8 AlignedHit9 AlignedHit10 AlignedHit11 AlignedHit12 AlignedHit13 </parameter>
  <!--drops all collections of the given type from the event-->
  <!--parameter name="DropCollectionTypes" type="StringVec"> SimTrackerHit SimCalorimeterHit </parameter-->
  <!-- write complete objects in subset collections to the file (i.e. ignore subset flag)-->
  <!--parameter name="FullSubsetCollections" type="StringVec" value="MCParticlesSkimmed"/-->
  <!--force keep of the named collections - overrules DropCollectionTypes (and DropCollectionNames)-->
  <!--parameter name="KeepCollectionNames" type="StringVec" value="MyPreciousSimTrackerHits"/-->
  <!-- name of output file -->
  <parameter name="LCIOOutputFile" type="string" value="@LcioPath@/run@RunNumber@-alibava-finalpos.slcio"/>
  <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
  <parameter name="LCIOWriteMode" type="string" value="WRITE_NEW"/>
  <!--Set it to true to remove intermediate EORE in merged runs-->
  <parameter name="SkipIntermediateEORE" type="bool" value="true"/>
  <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
  <!--parameter name="SplitFileSizekB" type="int" value="1992294"/-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

</marlin>
